%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Mon Nov  4 09:52:53 2024
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (dot.ps)
} def

/sequence { (\
CCGCCCAGGGCCUGGGCAGCACGCGAAAUUAGGCGACGGGAGAGGGUCGGAUCCCGACCGGGCAGCUGGGCAAUGAAUGUGAGACCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.004152766 ubox
1 40 0.003856205 ubox
1 75 0.110098523 ubox
1 79 0.006923013 ubox
1 81 0.014228193 ubox
1 83 0.012778858 ubox
2 38 0.004165126 ubox
2 39 0.003866736 ubox
2 75 0.074128875 ubox
2 79 0.019460623 ubox
2 81 0.023788747 ubox
2 83 0.017456607 ubox
3 17 0.013067878 ubox
3 71 0.998704160 ubox
3 74 0.009746441 ubox
3 80 0.007692420 ubox
4 16 0.013127988 ubox
4 40 0.003429442 ubox
4 70 0.999860396 ubox
4 79 0.007101973 ubox
5 15 0.013128842 ubox
5 39 0.003437401 ubox
5 69 0.999876939 ubox
6 14 0.013128766 ubox
6 38 0.003431881 ubox
6 68 0.999869815 ubox
6 75 0.006943315 ubox
7 13 0.013096082 ubox
7 67 0.999465412 ubox
7 74 0.006942563 ubox
8 12 0.012809051 ubox
8 66 0.998591743 ubox
8 67 0.006671539 ubox
9 63 0.012854495 ubox
9 66 0.013381366 ubox
10 34 0.008525917 ubox
10 63 0.999202380 ubox
10 71 0.007013309 ubox
11 33 0.008544316 ubox
11 61 0.006536951 ubox
11 62 0.999810201 ubox
11 70 0.006997463 ubox
12 32 0.008545963 ubox
12 60 0.006913825 ubox
12 61 0.999794879 ubox
12 62 0.003879073 ubox
12 69 0.006979197 ubox
13 21 0.020171659 ubox
13 31 0.008526703 ubox
13 60 0.998197003 ubox
13 61 0.004411064 ubox
13 68 0.006041907 ubox
14 20 0.036274871 ubox
14 22 0.007425897 ubox
14 30 0.008369198 ubox
14 37 0.003447379 ubox
14 58 0.003462767 ubox
14 59 0.994381319 ubox
14 67 0.004981332 ubox
15 20 0.040982498 ubox
15 22 0.014952848 ubox
15 29 0.008006622 ubox
15 37 0.004617578 ubox
15 58 0.990987578 ubox
15 59 0.034822063 ubox
15 66 0.003889837 ubox
15 67 0.004646828 ubox
16 20 0.078804273 ubox
16 22 0.035185022 ubox
16 24 0.091815439 ubox
16 34 0.031503763 ubox
16 37 0.024217300 ubox
16 58 0.046149152 ubox
16 66 0.005779046 ubox
17 23 0.091992904 ubox
17 25 0.003777388 ubox
17 33 0.031462078 ubox
17 35 0.020102645 ubox
17 38 0.011886038 ubox
17 39 0.030494547 ubox
17 40 0.036523073 ubox
17 42 0.028095488 ubox
17 44 0.004094016 ubox
17 45 0.003777118 ubox
17 56 0.131221079 ubox
17 65 0.006566396 ubox
19 24 0.005068194 ubox
19 30 0.003441240 ubox
19 34 0.069224503 ubox
19 37 0.051321446 ubox
19 54 0.004298846 ubox
19 55 0.007405034 ubox
19 63 0.006880911 ubox
19 71 0.003332836 ubox
20 25 0.007389423 ubox
20 32 0.005923999 ubox
20 33 0.069218913 ubox
20 35 0.019655918 ubox
20 38 0.024050858 ubox
20 39 0.037059825 ubox
20 40 0.013446280 ubox
20 42 0.005744105 ubox
20 56 0.009000830 ubox
20 62 0.006874091 ubox
20 70 0.003331978 ubox
21 29 0.004700840 ubox
21 30 0.004473303 ubox
22 32 0.058654555 ubox
22 33 0.010679771 ubox
22 35 0.971773475 ubox
22 38 0.032553395 ubox
22 40 0.007803109 ubox
22 81 0.004184023 ubox
23 29 0.003509470 ubox
23 30 0.016217434 ubox
23 34 0.991417113 ubox
23 37 0.033216367 ubox
23 80 0.004235366 ubox
24 32 0.031443222 ubox
24 33 0.991037649 ubox
24 35 0.045326641 ubox
24 38 0.008053715 ubox
24 49 0.005582092 ubox
24 79 0.004238932 ubox
25 29 0.007008205 ubox
25 30 0.015645573 ubox
25 34 0.049508450 ubox
25 37 0.008104191 ubox
25 48 0.005588651 ubox
25 55 0.003373848 ubox
25 78 0.003852630 ubox
26 30 0.022248510 ubox
26 47 0.005519072 ubox
28 52 0.003990020 ubox
29 36 0.008273300 ubox
29 44 0.003381566 ubox
29 51 0.004227966 ubox
29 57 0.007487576 ubox
30 35 0.008570241 ubox
30 43 0.003547291 ubox
30 50 0.004121443 ubox
30 56 0.007893501 ubox
31 52 0.003648685 ubox
32 37 0.010473696 ubox
32 53 0.003463593 ubox
32 54 0.015295143 ubox
32 55 0.014303429 ubox
33 53 0.015334345 ubox
33 54 0.014285306 ubox
33 71 0.004759041 ubox
34 39 0.006875018 ubox
34 40 0.004530631 ubox
34 49 0.027894205 ubox
34 70 0.004771049 ubox
35 48 0.030869004 ubox
35 53 0.004254104 ubox
35 58 0.008952947 ubox
36 47 0.033600304 ubox
36 52 0.004200716 ubox
37 42 0.041622254 ubox
37 44 0.048199571 ubox
37 45 0.014212846 ubox
37 46 0.035387599 ubox
37 49 0.006373068 ubox
37 50 0.003640789 ubox
37 56 0.959715772 ubox
37 60 0.018104339 ubox
37 68 0.005911061 ubox
38 48 0.006481468 ubox
38 54 0.003982931 ubox
38 55 0.986342115 ubox
38 59 0.019216886 ubox
38 67 0.006017663 ubox
39 47 0.006233715 ubox
39 48 0.003701302 ubox
39 53 0.004069853 ubox
39 54 0.986408948 ubox
39 55 0.024528889 ubox
39 58 0.019332856 ubox
39 59 0.004309749 ubox
39 66 0.006032285 ubox
40 48 0.006210266 ubox
40 52 0.003279940 ubox
40 53 0.986241614 ubox
40 54 0.024884672 ubox
40 58 0.004513175 ubox
41 47 0.008507170 ubox
41 52 0.975392029 ubox
42 47 0.021390450 ubox
42 48 0.220682675 ubox
42 52 0.007043772 ubox
42 53 0.028676354 ubox
42 55 0.017285750 ubox
42 63 0.003740545 ubox
43 47 0.192172172 ubox
43 52 0.034720976 ubox
44 48 0.337091681 ubox
44 52 0.008062422 ubox
44 53 0.004262189 ubox
44 54 0.021379253 ubox
44 55 0.111691976 ubox
44 59 0.004822355 ubox
44 87 0.003393650 ubox
45 52 0.010264986 ubox
45 53 0.021570043 ubox
45 54 0.111885915 ubox
45 55 0.003827963 ubox
45 58 0.003717906 ubox
45 59 0.096660342 ubox
45 86 0.003424632 ubox
46 52 0.021895786 ubox
46 53 0.111700197 ubox
46 54 0.003795959 ubox
46 58 0.101571303 ubox
46 85 0.003424284 ubox
47 51 0.023068467 ubox
47 57 0.108527305 ubox
47 84 0.003364702 ubox
48 56 0.110642859 ubox
48 83 0.003301572 ubox
49 55 0.111148840 ubox
50 54 0.109360660 ubox
50 55 0.005414185 ubox
58 69 0.005555115 ubox
59 68 0.005579568 ubox
60 67 0.005692589 ubox
60 87 0.008722547 ubox
61 66 0.005707218 ubox
61 86 0.008799307 ubox
62 85 0.008782031 ubox
63 83 0.003413943 ubox
65 80 0.003666287 ubox
66 79 0.003689817 ubox
66 83 0.007574001 ubox
67 82 0.007505804 ubox
68 87 0.004233989 ubox
69 80 0.004415122 ubox
69 86 0.004446172 ubox
70 80 0.007942431 ubox
70 85 0.004440191 ubox
71 79 0.012101328 ubox
71 81 0.007785244 ubox
71 83 0.004073596 ubox
72 78 0.019415855 ubox
72 80 0.014506646 ubox
73 78 0.018633986 ubox
73 80 0.070816571 ubox
74 79 0.069007121 ubox
74 81 0.015933855 ubox
74 82 0.037184484 ubox
74 83 0.019847666 ubox
74 84 0.019847357 ubox
75 80 0.019219369 ubox
75 85 0.026954028 ubox
75 86 0.034127028 ubox
75 87 0.020210021 ubox
76 80 0.023434208 ubox
78 82 0.013161325 ubox
78 83 0.019622519 ubox
78 84 0.037037103 ubox
79 85 0.104328759 ubox
79 86 0.055427496 ubox
79 87 0.030415113 ubox
80 84 0.094508613 ubox
81 85 0.029372910 ubox
81 86 0.071840090 ubox
81 87 0.033098347 ubox
83 87 0.014522751 ubox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
8 66 0.9500000 lbox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
12 61 0.9500000 lbox
13 60 0.9500000 lbox
14 59 0.9500000 lbox
15 58 0.9500000 lbox
22 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
37 56 0.9500000 lbox
38 55 0.9500000 lbox
39 54 0.9500000 lbox
40 53 0.9500000 lbox
41 52 0.9500000 lbox
showpage
end
%%EOF
