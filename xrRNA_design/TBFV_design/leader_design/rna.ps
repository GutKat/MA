%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Wed Nov 20 16:46:41 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUAAACCCCUCCUGGGAAGGAGGACCCGCCCAGGGCCUAGGCAGCACGCGAAAUUAGGCGACGGGAGAGGGUCGGAUCCCGACUGGGCAGCUGGGCAAUUUGUAAUUUGUGAGACCC\
) } def
/len { sequence length } bind def

/coor [
[64.76062775 423.80667114]
[57.67047501 424.63314819]
[50.53401566 424.63598633]
[43.44657516 423.81552124]
[36.50279999 422.18313599]
[29.79535103 419.76101685]
[23.41370201 416.58187866]
[17.44293404 412.68853760]
[11.96259022 408.13333130]
[0.48607755 417.79196167]
[-10.99043560 427.45062256]
[-22.46694756 437.10928345]
[-33.94346237 446.76794434]
[-45.41997528 456.42660522]
[-50.49443817 472.02090454]
[-66.59067535 475.15826416]
[-77.15026093 462.61126709]
[-71.31039429 447.28717041]
[-55.07863235 444.95010376]
[-43.60211945 435.29144287]
[-32.12560654 425.63278198]
[-20.64909172 415.97412109]
[-9.17257881 406.31546021]
[2.30393386 396.65679932]
[-7.22592592 371.31542969]
[-4.98504925 344.29425049]
[8.62905598 320.79983521]
[31.02413559 305.37393188]
[57.90670395 301.01535034]
[60.66294861 286.27075195]
[63.41918945 271.52615356]
[66.17543030 256.78155518]
[68.93167877 242.03695679]
[71.68791962 227.29235840]
[64.93809509 211.15174866]
[76.87693787 197.20913696]
[79.24301147 182.39692688]
[81.60908508 167.58470154]
[83.97515106 152.77249146]
[86.34122467 137.96028137]
[88.70729828 123.14806366]
[82.29534912 118.70569611]
[77.50738525 112.54752350]
[74.78260040 105.23840332]
[74.37093353 97.44878387]
[76.31012726 89.89317322]
[80.42232513 83.26463318]
[86.33031464 78.17117310]
[82.41616058 63.69086456]
[78.50200653 49.21055222]
[63.95593643 43.80764771]
[55.39171600 30.86802864]
[56.10247040 15.36723900]
[65.81489563 3.26565170]
[80.79436493 -0.78342748]
[95.28097534 4.77695560]
[103.70431519 17.80871964]
[102.82545471 33.30088806]
[92.98232269 45.29640198]
[96.89646912 59.77671051]
[100.81062317 74.25702667]
[105.39924622 74.81655121]
[109.81394958 76.18730927]
[119.32028198 64.58430481]
[128.82661438 52.98130035]
[138.33294678 41.37829590]
[147.83926392 29.77529335]
[142.34223938 15.43380547]
[144.76828003 0.26772645]
[154.46476746 -11.64334488]
[168.82341003 -17.09538841]
[183.98181152 -14.62183475]
[195.86242676 -4.88805437]
[201.26943970 9.48761272]
[198.74838257 24.63818550]
[188.97741699 36.48823547]
[174.58486938 41.85015869]
[159.44227600 39.28162384]
[149.93594360 50.88462830]
[140.42961121 62.48763275]
[130.92327881 74.09063721]
[121.41695404 85.69364166]
[123.49201202 110.55855560]
[103.51950836 125.51412964]
[101.15344238 140.32635498]
[98.78736877 155.13856506]
[96.42129517 169.95077515]
[94.05522919 184.76298523]
[91.68915558 199.57521057]
[98.64051819 210.53721619]
[96.28224945 222.89187622]
[86.43251801 230.04859924]
[83.67626953 244.79319763]
[80.92002869 259.53781128]
[78.16378784 274.28237915]
[75.40754700 289.02697754]
[72.65129852 303.77157593]
[79.35378265 306.33828735]
[85.71382904 309.66046143]
[91.64665222 313.69335938]
[97.07322693 318.38278198]
[101.92131042 323.66577148]
[106.12642670 329.47152710]
[109.63271332 335.72222900]
[112.39367676 342.33419800]
[114.37279510 349.21896362]
[115.54400635 356.28442383]
[115.89204407 363.43615723]
[115.41265869 370.57858276]
[114.11263275 377.61630249]
[112.00972748 384.45541382]
[109.13240814 391.00463867]
[105.51946259 397.17663574]
[101.21950531 402.88916016]
[96.29027557 408.06616211]
[90.79792023 412.63873291]
[84.81604767 416.54608154]
[78.42479706 419.73632812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[29 97]
[30 96]
[31 95]
[32 94]
[33 93]
[34 92]
[36 89]
[37 88]
[38 87]
[39 86]
[40 85]
[41 84]
[48 61]
[49 60]
[50 59]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
