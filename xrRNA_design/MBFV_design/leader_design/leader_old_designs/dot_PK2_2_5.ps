%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jul 25 13:20:24 2024
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (dot.ps)
} def

/sequence { (\
GCUAAAAAAGACACCUACCGGUGUCAAAGUCAGGCCAGAAAUGCCACCGGAUAUGUGUAGACGGUGCUGCCUGCAAAAUCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.059368689 ubox
1 31 0.005954976 ubox
1 35 0.028959652 ubox
1 67 0.003269024 ubox
1 74 0.069318548 ubox
1 79 0.003925667 ubox
1 80 0.020189233 ubox
1 81 0.003721815 ubox
2 10 0.012586831 ubox
2 29 0.065597032 ubox
2 33 0.009901137 ubox
2 34 0.028996231 ubox
2 66 0.003267324 ubox
2 73 0.065227649 ubox
3 7 0.012569542 ubox
3 8 0.024059591 ubox
3 9 0.025355355 ubox
3 26 0.008376746 ubox
3 27 0.004516953 ubox
3 28 0.063470015 ubox
3 29 0.003868224 ubox
3 32 0.009911912 ubox
3 33 0.028028924 ubox
3 75 0.008885578 ubox
3 76 0.010669009 ubox
3 77 0.010728108 ubox
3 78 0.011420232 ubox
4 30 0.014941933 ubox
4 79 0.006078684 ubox
4 81 0.005641769 ubox
5 30 0.031073171 ubox
5 79 0.007087660 ubox
5 81 0.006115415 ubox
6 30 0.026612370 ubox
6 79 0.007135789 ubox
6 81 0.006108878 ubox
7 30 0.014697717 ubox
7 79 0.007140250 ubox
7 81 0.006103180 ubox
8 30 0.004728033 ubox
8 79 0.007139457 ubox
8 81 0.006009925 ubox
9 30 0.006462185 ubox
9 79 0.007140581 ubox
9 81 0.007710633 ubox
10 25 0.998470717 ubox
10 80 0.005397963 ubox
11 24 0.999665324 ubox
11 58 0.007987396 ubox
11 79 0.003219781 ubox
12 23 0.999939172 ubox
12 57 0.008249291 ubox
13 22 0.999754369 ubox
13 56 0.008251125 ubox
14 21 0.999929545 ubox
14 55 0.008229446 ubox
15 20 0.998225545 ubox
15 21 0.004856958 ubox
16 20 0.006172648 ubox
16 53 0.007646159 ubox
17 52 0.007707412 ubox
18 50 0.008443841 ubox
19 49 0.008448697 ubox
20 48 0.008448886 ubox
21 47 0.008448939 ubox
22 46 0.008442428 ubox
23 45 0.008295880 ubox
25 43 0.007393618 ubox
26 30 0.004818517 ubox
26 42 0.006456200 ubox
26 79 0.025748508 ubox
26 81 0.007964484 ubox
27 79 0.016688497 ubox
27 81 0.008807509 ubox
28 72 0.005075512 ubox
28 79 0.025668020 ubox
28 81 0.037389786 ubox
29 71 0.005153316 ubox
29 74 0.836966229 ubox
29 79 0.045978276 ubox
29 80 0.041130981 ubox
30 39 0.008291550 ubox
30 73 0.164053292 ubox
30 75 0.140457835 ubox
30 76 0.031001922 ubox
30 77 0.022915554 ubox
30 78 0.050212036 ubox
31 38 0.008506063 ubox
31 69 0.005496820 ubox
31 73 0.979518810 ubox
32 68 0.005494370 ubox
32 72 0.997855510 ubox
33 45 0.013362064 ubox
33 67 0.005367057 ubox
33 71 0.998931672 ubox
33 72 0.004822916 ubox
34 44 0.014052249 ubox
34 70 0.998891365 ubox
34 71 0.005483702 ubox
34 74 0.025689382 ubox
35 43 0.012833989 ubox
35 69 0.749220005 ubox
35 73 0.018919951 ubox
36 43 0.076372494 ubox
36 66 0.007320121 ubox
36 69 0.660116567 ubox
36 73 0.033825542 ubox
37 42 0.076006183 ubox
37 65 0.005867194 ubox
37 68 0.932983199 ubox
37 72 0.038255030 ubox
37 81 0.007033388 ubox
38 42 0.004355827 ubox
38 44 0.017725916 ubox
38 45 0.005602152 ubox
38 67 0.921450016 ubox
38 68 0.043633786 ubox
38 70 0.005260294 ubox
38 71 0.038201943 ubox
38 80 0.007805963 ubox
39 65 0.006445694 ubox
39 68 0.044187438 ubox
39 79 0.007599742 ubox
40 65 0.008382262 ubox
40 68 0.045084960 ubox
41 65 0.006512249 ubox
41 68 0.119671168 ubox
42 59 0.005975977 ubox
42 63 0.020550503 ubox
42 66 0.016842671 ubox
42 69 0.008441611 ubox
42 75 0.009839704 ubox
43 58 0.006087679 ubox
43 62 0.020937403 ubox
43 65 0.016351752 ubox
43 67 0.312887119 ubox
43 68 0.100699643 ubox
43 70 0.015770711 ubox
43 74 0.010592684 ubox
44 57 0.005373046 ubox
44 60 0.017622459 ubox
44 64 0.016650650 ubox
44 66 0.229659348 ubox
44 69 0.015912593 ubox
44 73 0.010586764 ubox
45 55 0.004093442 ubox
45 57 0.008789115 ubox
45 60 0.010953983 ubox
45 63 0.016519391 ubox
45 66 0.971017491 ubox
46 54 0.003789923 ubox
46 56 0.009378093 ubox
46 58 0.020501479 ubox
46 65 0.998707204 ubox
47 55 0.009066637 ubox
47 57 0.020751360 ubox
47 64 0.999520008 ubox
48 55 0.020561484 ubox
48 57 0.006597817 ubox
48 60 0.012157584 ubox
48 63 0.999511391 ubox
49 54 0.018040473 ubox
49 56 0.006424915 ubox
49 62 0.999180160 ubox
49 81 0.004916146 ubox
50 56 0.003480615 ubox
50 58 0.005421901 ubox
50 62 0.007511078 ubox
50 80 0.005470735 ubox
51 56 0.003183293 ubox
51 58 0.041133271 ubox
51 79 0.005449631 ubox
52 57 0.041423190 ubox
52 59 0.935199617 ubox
52 60 0.026023843 ubox
52 61 0.013144108 ubox
52 78 0.004774717 ubox
53 58 0.843046955 ubox
54 59 0.030485064 ubox
54 60 0.005962438 ubox
54 61 0.015887507 ubox
55 62 0.010040315 ubox
56 61 0.012189361 ubox
56 75 0.005213134 ubox
57 74 0.005474304 ubox
58 73 0.005473775 ubox
59 72 0.005469408 ubox
59 81 0.006667581 ubox
60 71 0.005360558 ubox
60 80 0.007522509 ubox
61 79 0.007384163 ubox
62 69 0.004887676 ubox
63 68 0.003739275 ubox
65 75 0.009481639 ubox
66 74 0.012706374 ubox
67 73 0.012720881 ubox
73 80 0.004225803 ubox
75 79 0.008953780 ubox
75 81 0.012337921 ubox
76 81 0.013511752 ubox
77 81 0.007064273 ubox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
29 74 0.9500000 lbox
31 73 0.9500000 lbox
32 72 0.9500000 lbox
33 71 0.9500000 lbox
34 70 0.9500000 lbox
35 69 0.9500000 lbox
37 68 0.9500000 lbox
38 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
47 64 0.9500000 lbox
48 63 0.9500000 lbox
49 62 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
