%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Fri Jul 26 11:02:45 2024
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (dot.ps)
} def

/sequence { (\
GCUAAAAAAGACACCUACCGGUGUCAAAGUCAGGCCAGAAAUGCCACCGGAUAGAAGUAGACGGUGCUGCCUGCAAGUAGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.049252566 ubox
1 31 0.005710094 ubox
1 35 0.030576856 ubox
1 67 0.003394554 ubox
1 74 0.056992249 ubox
1 78 0.294491410 ubox
1 81 0.419409470 ubox
2 10 0.010385200 ubox
2 29 0.054468874 ubox
2 33 0.009405146 ubox
2 34 0.030652729 ubox
2 66 0.003520551 ubox
2 73 0.053625618 ubox
2 77 0.305228987 ubox
2 80 0.465539508 ubox
3 7 0.010711571 ubox
3 8 0.020502685 ubox
3 9 0.021447888 ubox
3 26 0.006981403 ubox
3 27 0.003752903 ubox
3 28 0.052702002 ubox
3 29 0.003244806 ubox
3 32 0.009541138 ubox
3 33 0.029629282 ubox
3 75 0.013533165 ubox
3 76 0.294316118 ubox
3 77 0.007708586 ubox
3 79 0.463319234 ubox
3 80 0.007612446 ubox
4 30 0.013536138 ubox
4 78 0.436724691 ubox
4 81 0.003990599 ubox
5 30 0.031079777 ubox
5 78 0.021494346 ubox
5 81 0.004321626 ubox
6 30 0.027109593 ubox
6 78 0.010434448 ubox
6 81 0.004317529 ubox
7 30 0.014708003 ubox
7 78 0.008986338 ubox
7 81 0.004260035 ubox
8 30 0.004727997 ubox
8 78 0.008267467 ubox
8 81 0.004255263 ubox
9 30 0.006459738 ubox
9 78 0.007871124 ubox
9 81 0.004251856 ubox
10 25 0.998534082 ubox
11 24 0.999707567 ubox
12 23 0.999974161 ubox
13 22 0.999789275 ubox
14 21 0.999964415 ubox
15 20 0.998260386 ubox
15 21 0.004857087 ubox
16 20 0.006172837 ubox
25 77 0.003249201 ubox
25 80 0.003372537 ubox
26 30 0.006719587 ubox
26 78 0.063366663 ubox
26 81 0.010759022 ubox
27 78 0.067642262 ubox
27 81 0.007084665 ubox
28 72 0.004703486 ubox
28 78 0.069468801 ubox
28 81 0.012296885 ubox
29 35 0.003265215 ubox
29 71 0.004773968 ubox
29 74 0.833787202 ubox
29 78 0.015608905 ubox
30 39 0.005191180 ubox
30 73 0.163430222 ubox
30 75 0.142743244 ubox
30 76 0.059316976 ubox
30 77 0.019070408 ubox
30 79 0.014655899 ubox
30 80 0.005922829 ubox
31 38 0.005532266 ubox
31 69 0.005123293 ubox
31 73 0.979129165 ubox
31 77 0.011490054 ubox
32 68 0.005121393 ubox
32 72 0.996843691 ubox
33 45 0.046922617 ubox
33 67 0.005000929 ubox
33 71 0.997861931 ubox
33 72 0.004730450 ubox
34 44 0.047465470 ubox
34 70 0.997821491 ubox
34 71 0.005378131 ubox
34 74 0.024883157 ubox
34 78 0.005908594 ubox
35 43 0.043250231 ubox
35 69 0.748434021 ubox
35 73 0.018324995 ubox
35 77 0.006043305 ubox
36 43 0.078762266 ubox
36 66 0.005979572 ubox
36 69 0.659388395 ubox
36 73 0.030191379 ubox
37 42 0.080269828 ubox
37 65 0.004073852 ubox
37 68 0.931955504 ubox
37 72 0.034760151 ubox
38 42 0.004594429 ubox
38 44 0.017760795 ubox
38 45 0.005677697 ubox
38 67 0.920424662 ubox
38 68 0.043600068 ubox
38 70 0.005053981 ubox
38 71 0.034716141 ubox
39 65 0.005534915 ubox
39 68 0.044153431 ubox
40 65 0.007290046 ubox
40 68 0.045027872 ubox
41 65 0.005805687 ubox
41 68 0.119265140 ubox
42 63 0.003239649 ubox
42 66 0.012289665 ubox
42 69 0.008157424 ubox
42 75 0.005847462 ubox
43 62 0.003294251 ubox
43 65 0.008646954 ubox
43 67 0.312352587 ubox
43 68 0.100610406 ubox
43 70 0.014500192 ubox
43 74 0.006474290 ubox
44 64 0.008559207 ubox
44 66 0.229285841 ubox
44 69 0.014660679 ubox
44 73 0.006471923 ubox
45 63 0.008339834 ubox
45 66 0.970448942 ubox
46 65 0.998964161 ubox
47 64 0.999939768 ubox
48 60 0.006281089 ubox
48 63 0.999934105 ubox
49 62 0.999793568 ubox
50 62 0.005109742 ubox
51 58 0.024215845 ubox
52 56 0.005476259 ubox
52 57 0.024704713 ubox
52 59 0.983394558 ubox
52 60 0.013576226 ubox
52 61 0.006520632 ubox
53 58 0.962171708 ubox
54 58 0.012924557 ubox
65 75 0.012935155 ubox
66 74 0.024048596 ubox
66 78 0.005087140 ubox
66 81 0.037013120 ubox
67 73 0.024068931 ubox
67 77 0.005789019 ubox
67 80 0.045286338 ubox
68 76 0.005614360 ubox
68 79 0.045523239 ubox
69 78 0.045570038 ubox
70 77 0.045355667 ubox
71 77 0.004048512 ubox
71 80 0.003676327 ubox
72 76 0.004987897 ubox
72 79 0.003798944 ubox
73 78 0.003419286 ubox
73 81 0.013662069 ubox
74 80 0.037031355 ubox
75 81 0.008628189 ubox
76 81 0.018082141 ubox
77 81 0.005810435 ubox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
29 74 0.9500000 lbox
31 73 0.9500000 lbox
32 72 0.9500000 lbox
33 71 0.9500000 lbox
34 70 0.9500000 lbox
35 69 0.9500000 lbox
37 68 0.9500000 lbox
38 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
47 64 0.9500000 lbox
48 63 0.9500000 lbox
49 62 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
