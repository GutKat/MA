%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jul 25 13:21:22 2024
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (dot.ps)
} def

/sequence { (\
GCUAAAAAAGACACCUACCGGUGUCAAAGUCAGGCCAGAAAUGCCACCGGAUAUGCUUAGACGGUGCUGCCUGCAACGUAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.052901995 ubox
1 31 0.005331986 ubox
1 35 0.025270683 ubox
1 74 0.061723718 ubox
1 77 0.041915963 ubox
1 79 0.129871425 ubox
1 81 0.003858767 ubox
2 10 0.012426427 ubox
2 29 0.058450823 ubox
2 33 0.009020923 ubox
2 34 0.025299343 ubox
2 73 0.058078024 ubox
2 78 0.134487508 ubox
3 7 0.012939432 ubox
3 8 0.024766889 ubox
3 9 0.025854265 ubox
3 26 0.008346881 ubox
3 27 0.004398095 ubox
3 28 0.056608215 ubox
3 29 0.003476845 ubox
3 32 0.009014925 ubox
3 33 0.024455793 ubox
3 75 0.011676773 ubox
3 76 0.017711337 ubox
3 78 0.007520178 ubox
3 80 0.022963012 ubox
4 30 0.013435363 ubox
4 79 0.022911133 ubox
4 81 0.004791719 ubox
5 30 0.027956852 ubox
5 79 0.008906955 ubox
5 81 0.005194620 ubox
6 30 0.023720634 ubox
6 79 0.008911627 ubox
6 81 0.005188661 ubox
7 30 0.013225075 ubox
7 79 0.008921443 ubox
7 81 0.005181505 ubox
8 30 0.004255941 ubox
8 79 0.008927293 ubox
8 81 0.005069593 ubox
9 30 0.005817998 ubox
9 79 0.008926638 ubox
9 81 0.005048230 ubox
10 25 0.998507906 ubox
11 24 0.999704079 ubox
12 23 0.999973327 ubox
13 22 0.999788530 ubox
14 21 0.999963670 ubox
15 20 0.998259639 ubox
15 21 0.004857072 ubox
16 20 0.006172826 ubox
25 78 0.005027221 ubox
26 30 0.004472346 ubox
26 79 0.063331780 ubox
26 81 0.021691294 ubox
27 79 0.082507358 ubox
27 81 0.011330607 ubox
28 72 0.004477201 ubox
28 79 0.058775414 ubox
28 81 0.008314323 ubox
29 71 0.004544286 ubox
29 74 0.753851894 ubox
29 77 0.435515997 ubox
29 79 0.010695648 ubox
29 81 0.015400941 ubox
30 39 0.003442837 ubox
30 73 0.147764021 ubox
30 75 0.153466010 ubox
30 76 0.400702416 ubox
30 78 0.013410723 ubox
30 80 0.016423840 ubox
31 38 0.003636930 ubox
31 69 0.004853441 ubox
31 73 0.981983792 ubox
31 78 0.004835759 ubox
32 68 0.004851071 ubox
32 72 0.998165385 ubox
32 79 0.003821384 ubox
33 45 0.012828483 ubox
33 67 0.004736935 ubox
33 71 0.999113763 ubox
33 72 0.006173755 ubox
33 77 0.006712543 ubox
34 44 0.013419114 ubox
34 70 0.999072867 ubox
34 71 0.006669296 ubox
34 74 0.023626095 ubox
34 77 0.005149935 ubox
34 79 0.004603985 ubox
35 43 0.012258481 ubox
35 69 0.749372418 ubox
35 73 0.017403047 ubox
35 78 0.004695971 ubox
36 43 0.076402322 ubox
36 66 0.005955921 ubox
36 69 0.660226265 ubox
36 73 0.031466994 ubox
37 42 0.076018212 ubox
37 65 0.004032584 ubox
37 68 0.933132233 ubox
37 72 0.035493375 ubox
38 42 0.004356403 ubox
38 44 0.017735454 ubox
38 45 0.005626397 ubox
38 67 0.921586751 ubox
38 68 0.043654885 ubox
38 70 0.004856576 ubox
38 71 0.035442216 ubox
39 65 0.005526223 ubox
39 68 0.044208773 ubox
40 65 0.007283970 ubox
40 68 0.045085998 ubox
41 65 0.005819652 ubox
41 68 0.119473890 ubox
42 66 0.012466369 ubox
42 69 0.008212784 ubox
42 75 0.006022861 ubox
43 65 0.008984918 ubox
43 67 0.312783911 ubox
43 68 0.100738992 ubox
43 70 0.014603597 ubox
43 74 0.006651106 ubox
44 64 0.008919610 ubox
44 66 0.229596922 ubox
44 69 0.014762354 ubox
44 73 0.006648832 ubox
45 63 0.008708480 ubox
45 66 0.971448248 ubox
46 65 0.999113912 ubox
47 64 0.999928591 ubox
48 60 0.006653079 ubox
48 63 0.999921498 ubox
49 57 0.003860827 ubox
49 62 0.999784595 ubox
50 56 0.006693841 ubox
50 57 0.003604538 ubox
50 58 0.009689279 ubox
50 62 0.005025670 ubox
51 57 0.009462282 ubox
51 58 0.014439501 ubox
52 59 0.985589776 ubox
52 60 0.012554237 ubox
52 61 0.006196916 ubox
53 57 0.016209971 ubox
53 58 0.967475637 ubox
54 59 0.014332347 ubox
54 61 0.007500592 ubox
61 79 0.005116956 ubox
62 78 0.005290207 ubox
63 77 0.005328667 ubox
65 75 0.007267764 ubox
66 74 0.011751261 ubox
67 73 0.011767632 ubox
69 79 0.003287856 ubox
70 78 0.003291705 ubox
73 77 0.003534982 ubox
73 79 0.003866375 ubox
74 78 0.005822194 ubox
75 79 0.009351628 ubox
75 81 0.009345934 ubox
76 81 0.008702114 ubox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
29 74 0.9500000 lbox
31 73 0.9500000 lbox
32 72 0.9500000 lbox
33 71 0.9500000 lbox
34 70 0.9500000 lbox
35 69 0.9500000 lbox
37 68 0.9500000 lbox
38 67 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
47 64 0.9500000 lbox
48 63 0.9500000 lbox
49 62 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
