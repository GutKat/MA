%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.6.4
%%CreationDate: Thu Jul 25 13:16:24 2024
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (dot.ps)
} def

/sequence { (\
GCUAAAAAAGACACCUACCGGUGUCAACCUCAGGCCAGAAAUGCCACCGGAUAAAGGUAGACGGUGCCGCCUGCAACCUUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.005403561 ubox
1 28 0.007562633 ubox
1 29 0.008570567 ubox
1 31 0.011220277 ubox
1 35 0.093002268 ubox
1 36 0.004664360 ubox
1 58 0.003620137 ubox
1 62 0.006872016 ubox
1 67 0.008591137 ubox
1 70 0.015327421 ubox
1 74 0.119782800 ubox
1 77 0.020612728 ubox
1 78 0.021029253 ubox
1 79 0.003709337 ubox
1 80 0.003958250 ubox
1 81 0.003827071 ubox
2 10 0.014433354 ubox
2 33 0.032263226 ubox
2 34 0.093115902 ubox
2 49 0.003758028 ubox
2 50 0.008270883 ubox
2 57 0.003748260 ubox
2 60 0.009258635 ubox
2 66 0.008636877 ubox
2 69 0.015385540 ubox
2 73 0.113240703 ubox
3 7 0.012726707 ubox
3 8 0.024355272 ubox
3 9 0.026503024 ubox
3 26 0.009182863 ubox
3 27 0.004277694 ubox
3 32 0.032407563 ubox
3 33 0.089372550 ubox
3 49 0.007877810 ubox
3 53 0.003405086 ubox
3 56 0.003612215 ubox
3 59 0.009057810 ubox
3 75 0.008713864 ubox
3 76 0.010418283 ubox
4 30 0.015237340 ubox
4 52 0.003537031 ubox
4 58 0.006432092 ubox
4 72 0.006917993 ubox
4 79 0.006514042 ubox
4 80 0.015182682 ubox
4 81 0.025376308 ubox
5 30 0.031806623 ubox
5 79 0.015513325 ubox
5 80 0.030460264 ubox
5 81 0.027514257 ubox
6 30 0.035813182 ubox
6 79 0.028156270 ubox
6 80 0.032187489 ubox
6 81 0.027533224 ubox
7 30 0.014336744 ubox
7 79 0.029662001 ubox
7 80 0.032219216 ubox
7 81 0.031441334 ubox
8 30 0.008637142 ubox
8 79 0.029703286 ubox
8 80 0.037063534 ubox
8 81 0.013686234 ubox
9 16 0.005681633 ubox
9 30 0.014958593 ubox
9 79 0.035299696 ubox
9 80 0.014743413 ubox
9 81 0.006099682 ubox
10 15 0.005892586 ubox
10 25 0.997962396 ubox
10 28 0.004821646 ubox
10 29 0.009868224 ubox
10 78 0.019214755 ubox
11 24 0.999381291 ubox
12 23 0.999670928 ubox
12 60 0.003868571 ubox
13 22 0.999486732 ubox
13 58 0.008784633 ubox
14 21 0.999661895 ubox
14 57 0.009177532 ubox
15 20 0.997958364 ubox
15 21 0.004855717 ubox
15 56 0.009184556 ubox
15 60 0.005217367 ubox
16 20 0.006171038 ubox
16 51 0.003311059 ubox
16 53 0.006646089 ubox
16 55 0.008252343 ubox
16 59 0.005430250 ubox
17 52 0.008153058 ubox
17 58 0.005439958 ubox
18 50 0.023319760 ubox
18 57 0.005432409 ubox
19 49 0.023405513 ubox
19 56 0.005427087 ubox
20 29 0.005365422 ubox
20 48 0.023410449 ubox
21 28 0.005373056 ubox
21 47 0.023410452 ubox
22 27 0.005319765 ubox
22 46 0.023393699 ubox
22 53 0.005147042 ubox
23 45 0.022964702 ubox
23 52 0.005215836 ubox
24 51 0.005217473 ubox
25 43 0.021675683 ubox
25 50 0.004922588 ubox
26 30 0.008779248 ubox
26 42 0.020569990 ubox
26 52 0.033538952 ubox
26 79 0.032768513 ubox
26 80 0.050562792 ubox
26 81 0.025591948 ubox
27 42 0.004706625 ubox
27 52 0.029044363 ubox
27 58 0.017255720 ubox
27 65 0.006089815 ubox
27 79 0.052649819 ubox
27 80 0.028850368 ubox
27 81 0.007231650 ubox
28 33 0.008713395 ubox
28 34 0.026196375 ubox
28 49 0.009996225 ubox
28 50 0.174991396 ubox
28 57 0.017968335 ubox
28 64 0.006555238 ubox
28 73 0.012830884 ubox
29 33 0.026342263 ubox
29 34 0.005221629 ubox
29 38 0.013183901 ubox
29 49 0.175483717 ubox
29 50 0.034004276 ubox
29 56 0.017983716 ubox
29 63 0.006556902 ubox
29 73 0.013583270 ubox
30 37 0.012509784 ubox
30 39 0.025070767 ubox
30 46 0.004781711 ubox
30 49 0.031622485 ubox
30 50 0.019648008 ubox
30 51 0.018202358 ubox
30 55 0.016917767 ubox
30 61 0.006613606 ubox
30 73 0.012566783 ubox
30 75 0.271587352 ubox
30 76 0.048182443 ubox
31 38 0.025973608 ubox
31 49 0.025417538 ubox
31 50 0.019410212 ubox
31 60 0.006751020 ubox
31 73 0.890020734 ubox
32 72 0.905483547 ubox
32 79 0.315554237 ubox
32 80 0.018831074 ubox
32 81 0.003586765 ubox
33 45 0.202922583 ubox
33 47 0.005045018 ubox
33 48 0.019915929 ubox
33 52 0.005052087 ubox
33 68 0.012836581 ubox
33 71 0.907293377 ubox
33 74 0.008733499 ubox
33 77 0.018039199 ubox
33 78 0.337708617 ubox
33 79 0.014467279 ubox
34 44 0.203395013 ubox
34 45 0.007423678 ubox
34 47 0.019918876 ubox
34 58 0.003552914 ubox
34 67 0.012865256 ubox
34 70 0.907279121 ubox
34 74 0.081944709 ubox
34 77 0.337434130 ubox
34 78 0.014475879 ubox
35 43 0.185296462 ubox
35 50 0.017260290 ubox
35 57 0.003583618 ubox
35 66 0.012114781 ubox
35 69 0.900926443 ubox
35 73 0.060018068 ubox
36 43 0.221894769 ubox
36 49 0.017386877 ubox
36 56 0.003581678 ubox
36 64 0.008495931 ubox
36 66 0.040122978 ubox
36 69 0.061957984 ubox
36 73 0.350700785 ubox
37 42 0.234227261 ubox
37 65 0.038991213 ubox
37 72 0.355834123 ubox
37 79 0.008071833 ubox
38 42 0.013602610 ubox
38 44 0.045907945 ubox
38 45 0.016197294 ubox
38 47 0.012959062 ubox
38 48 0.004546276 ubox
38 62 0.006717695 ubox
38 65 0.009668518 ubox
38 67 0.160787177 ubox
38 68 0.211400196 ubox
38 70 0.018351707 ubox
38 71 0.355118359 ubox
38 72 0.006321033 ubox
38 74 0.022124483 ubox
38 77 0.004046099 ubox
38 78 0.008583722 ubox
38 80 0.004039372 ubox
38 81 0.004704022 ubox
39 65 0.022256992 ubox
39 72 0.016997230 ubox
39 79 0.003949784 ubox
39 80 0.005214720 ubox
40 65 0.017441170 ubox
40 72 0.007850862 ubox
40 79 0.005188443 ubox
41 52 0.010277916 ubox
41 65 0.012532910 ubox
41 72 0.016433118 ubox
42 51 0.010675755 ubox
42 53 0.004440019 ubox
42 59 0.039602033 ubox
42 61 0.003991755 ubox
42 63 0.057624087 ubox
42 64 0.010352703 ubox
42 66 0.023857449 ubox
42 69 0.280739148 ubox
42 75 0.026428175 ubox
43 52 0.004907113 ubox
43 58 0.040182502 ubox
43 62 0.059393580 ubox
43 65 0.031930851 ubox
43 67 0.555875661 ubox
43 68 0.632160770 ubox
43 70 0.135992690 ubox
43 74 0.028899777 ubox
44 49 0.008425779 ubox
44 50 0.016971012 ubox
44 57 0.040215172 ubox
44 60 0.060436906 ubox
44 64 0.032625675 ubox
44 66 0.396126647 ubox
44 69 0.135604981 ubox
44 73 0.028885907 ubox
45 49 0.016894880 ubox
45 50 0.003407963 ubox
45 56 0.040178314 ubox
45 60 0.031707435 ubox
45 63 0.032586218 ubox
45 66 0.887255468 ubox
46 58 0.082609004 ubox
46 65 0.973127779 ubox
47 57 0.084452417 ubox
47 64 0.974383035 ubox
48 56 0.084458231 ubox
48 60 0.004662583 ubox
48 63 0.974376154 ubox
48 69 0.003732202 ubox
49 62 0.974125132 ubox
49 68 0.004075575 ubox
49 78 0.013435662 ubox
50 58 0.004519566 ubox
50 62 0.006597306 ubox
50 67 0.004074359 ubox
50 77 0.013432766 ubox
51 58 0.044330511 ubox
51 81 0.004513526 ubox
52 56 0.009232382 ubox
52 57 0.045470830 ubox
52 59 0.925367432 ubox
52 60 0.022704350 ubox
52 61 0.011090636 ubox
52 66 0.003167298 ubox
52 75 0.005663366 ubox
53 58 0.856563129 ubox
53 80 0.006316149 ubox
53 81 0.155143059 ubox
54 58 0.026624860 ubox
54 79 0.005154895 ubox
54 80 0.191368995 ubox
54 81 0.005418880 ubox
55 72 0.015651828 ubox
55 79 0.199052489 ubox
55 80 0.004683284 ubox
56 62 0.005107201 ubox
56 68 0.023326673 ubox
56 71 0.015900041 ubox
56 78 0.200184371 ubox
57 67 0.023358506 ubox
57 70 0.015897663 ubox
57 74 0.018503850 ubox
57 77 0.199998293 ubox
58 66 0.023343726 ubox
58 69 0.015530994 ubox
58 73 0.021570865 ubox
58 75 0.006816718 ubox
58 76 0.196069262 ubox
59 65 0.022986025 ubox
59 72 0.029335668 ubox
59 81 0.008514206 ubox
60 67 0.013737908 ubox
60 68 0.004131918 ubox
60 71 0.029361186 ubox
60 74 0.188141381 ubox
60 80 0.011590412 ubox
60 81 0.008487481 ubox
61 72 0.022377221 ubox
61 79 0.011875729 ubox
61 80 0.009446575 ubox
62 66 0.003701512 ubox
62 69 0.029739997 ubox
62 73 0.106549588 ubox
63 68 0.029484531 ubox
63 70 0.004559577 ubox
63 71 0.176279279 ubox
63 72 0.090584377 ubox
63 78 0.035613607 ubox
64 70 0.176616138 ubox
64 71 0.089655150 ubox
64 77 0.035656785 ubox
65 69 0.165458130 ubox
65 75 0.028993284 ubox
65 76 0.025630583 ubox
66 70 0.025366295 ubox
66 74 0.040111212 ubox
67 73 0.039911999 ubox
68 73 0.005467742 ubox
73 77 0.003526656 ubox
73 78 0.007297458 ubox
75 79 0.007897019 ubox
75 80 0.015067397 ubox
75 81 0.016804553 ubox
76 80 0.015616138 ubox
76 81 0.009692486 ubox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
31 73 0.9500000 lbox
32 72 0.9500000 lbox
33 71 0.9500000 lbox
34 70 0.9500000 lbox
35 69 0.9500000 lbox
43 68 0.9500000 lbox
45 66 0.9500000 lbox
46 65 0.9500000 lbox
47 64 0.9500000 lbox
48 63 0.9500000 lbox
49 62 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
